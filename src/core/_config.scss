/**
  Global EtherealCSS Config
*/

/**
  Designed
  https://colorhunt.co/palette/125366
  https://colorhunt.co/palette/125367
*/

// Theme colors
$default: #2f3944 !default;
$primary: #7896ab !default;
$success: #597a56 !default;
$info: #5c9cb9 !default;
$joy: #b45c48 !default;
$warning: #d8ca83 !default;
$danger: #774f4b !default;
$muted: #a5afa3 !default;
// light
$default-light: lighten($default, 50%) !default;
$primary-light: lighten($primary, 50%) !default;
$success-light: lighten($success, 30%) !default;
$info-light: lighten($info, 30%) !default;
$joy-light: lighten($joy, 30%) !default;
$warning-light: lighten($warning, 30%) !default;
$danger-light: lighten($danger, 45%) !default;
$muted-light: lighten($muted, 35%) !default;
// dark
$white-dark: rgba(black, 0.03) !default;
$light-dark: rgba(black, 0.7) !default;
$white: rgba(white, 1) !default;
$main-background: rgba(white, 1) !default;
// text
$default-text: #FFF !default;
$primary-text: $default !default;
$success-text: $default !default;
$info-text: $info !default;
$joy-text: $joy !default;
$warning-text: $default !default;
$danger-text: $default !default;
$muted-text: $default !default;
// Map to set your color names
$colors:(default, $default, $default-light, $default-text),
(primary, $primary, $primary-light, $primary-text),
(success, $success, $success-light, $success-text),
(info, $info, $info-light, $info-text),
(joy, $joy, $joy-light, $joy-text),
(warning, $warning, $warning-light, $warning-text),
(danger, $danger, $danger-light, $danger-text),
(muted, $muted, $muted-light, $muted-text);
/**
  This Loop will generate the various .text- and .background- classes
  based on the $colors map above.
*/

@each $colorName,
$color,
$color-light in $colors {
  .text-#{$colorName} {
    color: $color;
  }
  .background-#{$colorName} {
    background-color: $color-light;
  }
}

// Font settings
$global-font-size: 20px !default;
$header-font:Georgia,
'Microsoft YaHei UI',
'Microsoft Yahei' !default;
$body-font: Georgia,
'Microsoft YaHei UI',
'Microsoft Yahei' !default;
$light-font:Georgia,
'Microsoft JhengHei UI',
'Microsoft JhengHei' !default;
$font-color: $default !default;
// Responsive breakpoints
$large-screen: 1200px !default;
$medium-screen: 992px !default;
$small-screen: 768px !default;
$xsmall-screen: 480px !default;
/**
  Mixin for setting responsive breakpoints
  @param string | integer
  @default null
*/

@mixin resp($max:null, $min:null) {
  @if $max==large or $max==lg {
    $max: $large-screen;
  }
  @if $max==medium or $max==md {
    $max: $medium-screen;
  }
  @if $max==small or $max==sm {
    $max: $small-screen;
  }
  @if $max==xsmall or $max==xs {
    $max: $xsmall-screen;
  }
  @if ($min !=null and $max !=null) {
    @media only screen and (max-width: $max) and (min-width: $min) {
      @content;
    }
  }
  @else if($max !=null and $min==null) {
    @media only screen and (max-width: $max) {
      @content;
    }
  }
  @else if($min !=null and $max==null) {
    @media only screen and (min-width: $min) {
      @content;
    }
  }
  @else {
    @error "no matching size found";
  }
}

/**
  Column size
*/

@mixin col-size($percent) {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 $percent;
  -ms-flex: 0 0 $percent;
  flex: 0 0 $percent;
  max-width: $percent;
}

/*
  Add transform: translate() with browser prefixes.
  Same syntax for translate() and translate3d()
  To get 3D add a $z value and set 'true'
  @param string | boolean
  @default 0 | false
*/

@mixin translate($x, $y, $z: 0, $transform3d: false) {
  @if $transform3d {
    -webkit-transform: translate3d($x, $y, $z);
    -ms-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
  }
  @else {
    -webkit-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    transform: translate($x, $y);
  }
}

/**
  Add global transition styles to selector
  @param string
  @default all | 235ms | ease-in-out | 0
*/

@mixin transition($name:all, $duration:235ms, $animation:ease-in-out, $delay:0s) {
  -webkit-transition: $name $duration $animation $delay;
  -moz-transition: $name $duration $animation $delay;
  -o-transition: $name $duration $animation $delay;
  transition: $name $duration $animation $delay;
}
